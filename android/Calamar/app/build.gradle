apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'jacoco'

android {
    signingConfigs {
        Calamar {
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "ch.epfl.sweng.calamar"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.scottyab:secure-preferences-lib:0.1.4'
    compile('com.google.android.gms:play-services:8.1.0') { exclude module: "support-v4" }
    compile 'net.zetetic:android-database-sqlcipher:3.3.1-2@aar'
    compile project(':libs:aFileChooser')
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support:support-annotations:23.1.1'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
}

jacoco {
    toolVersion = "0.7.5.201505241946"
}

task jacocoReport(type: JacocoReport, dependsOn: "connectedAndroidTest") {
    sourceDirectories = files(['src/main/java'])
    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: [
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*Test*.*',
                    '**/android/**/*.*',
                    '**/libs/**/*.*',
                    '**/aFileChooser/**/*.*'
            ]
    )

    executionData = files('build/outputs/code-coverage/connected/coverage.ec')
}
